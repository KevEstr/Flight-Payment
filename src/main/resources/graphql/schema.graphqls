
type Query {
    findPaymentById(payment_id: ID!) : Payment
    allPaymentMethods : [PaymentMethod!]!
    allGatewayPayment: [GatewayPayment!]!
    findTransactionById( id: ID!) : Transaction
    getPaymentMethodsByUserId( userId: ID!) : [PaymentMethodXUser!]!
    getAllUserBookings(user_id: ID!) : [Booking!]!
    getBookingById(booking_id: ID!) : Booking
    getAllBookings : [Booking!]!
}

type Mutation {
    createTransaction(inputTransaction : InputTransaction! ): String
    updateTransactionStatus( transactionId : ID!, newStatus: Int!): Transaction
    createPaymentMethodXUser( inputPaymentMethodXUser: InputPaymentMethodXUser): PaymentMethodXUser

    deletePaymentMethodXUser ( paymentMethodXUserId: ID!) : String

    createMercadoPagoPreference(transactionId: ID!, amount: Int!): String

    createStripePaymentSession(transactionId: ID!): String

}

type Payment{
    payment_id: ID,
    date: String,
    transaction: Transaction,
    gateway: GatewayPayment,
}

type GatewayPayment{
    id: ID,
    name: String,
}

type PaymentMethod{
    id: ID!,
    name: String!,
}

type PaymentMethodXUser{
    id: ID,
    card_number: String,
    card_type: String
    expiry_date:String,
    ccv: String
}


type Transaction{
    id: ID,
    status: Int,
    date: String,
    total_price: Float,
    paymentMethod : PaymentMethod,
    booking: Booking
}

type FlightInfo {
    id: ID!
    flight: Flight
}

type Flight {
    id: ID!
    departure_date: String!
    departure_time: String!
    arrival_time: String!
    departure_airport: String!
    arrival_airport: String!
    duration: String!
    flight_number: String!
    flight_class: String!
    stops: String!

}

type Booking{
    id: ID
    is_paid: Boolean
    price: Float
    additional_charge: Float
    flight_infos: [FlightInfo!]!
    user_id: ID
}

type User{
    id: ID!
}

input InputPaymentMethodXUser{
    card_number: String,
    card_type: String
    expiry_date:String,
    ccv: String
    user_id: ID!,
    payment_method_id: ID!
}

input InputTransaction{
    booking_id: ID!,
    gateway_payment_id: ID!
}
