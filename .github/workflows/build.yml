name: CI/CD Pipeline
on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  # Unit Tests Job
  tests:
    name: Unit tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: juan_payment
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '17'
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Run Unit Tests
        env:
          POSTGRES_URL: jdbc:postgresql://localhost:5432/juan_payment
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123
        run: mvn -B test

  # Integration Tests Job
  integration_tests:
    needs: tests
    name: Integration tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: juan_payment
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '17'
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Run Integration Tests
        env:
          POSTGRES_URL: jdbc:postgresql://localhost:5432/juan_payment
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123
        run: mvn -B verify

  # Sonar's Job
  sonar:
    needs: integration_tests
    name: SonarCloud analysis

    # Run on Ubuntu using the latest version
    runs-on: ubuntu-latest

    # Job's steps
    steps:
      # Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      - uses: actions/checkout@v1

      # Set up JDK 17
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      # Set up SonarCloud cache
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # Set up Maven cache
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Analyze with SonarCloud
      - name: Analyze with SonarCloud
        run: mvn clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=mono789_Flight-Payment -Dsonar.organization=mono789 -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/juan_payment
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: 123
